/* Enclave.edl - Top EDL file. */

enclave {
    
    include "user_types.h" /* buffer_t */
    include "sgx_tcrypto.h"
    include "aes.h"
    
    trusted {
        	public int elide_restore();
        
	public void AES128_ECB_encrypt([in,string] uint8_t* input, [in,string] const uint8_t* key, [user_check] uint8_t *output);
	public void AES128_ECB_decrypt([in,string] uint8_t* input, [in,string] const uint8_t* key, [user_check] uint8_t *output);
	public void AES128_CBC_encrypt_buffer([user_check] uint8_t* output, [in,count=length] uint8_t* input, uint32_t length, [in,string] const uint8_t* key, [user_check] const uint8_t* iv);
	public void AES128_CBC_decrypt_buffer([user_check] uint8_t* output, [user_check] uint8_t* input, uint32_t length, [in,string] const uint8_t* key, [user_check] const uint8_t* iv);

    };

    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
     *  [*]: implies to import all functions.
     */
    

    /* 
     * ocall_print_string - invokes OCALL to display string buffer inside the enclave.
     *  [in]: copy the string buffer to App outside.
     *  [string]: specifies 'str' is a NULL terminated buffer.
     */
    untrusted {
        void ocall_print_string([in, string] const char *str);
       void elide_read_file([in, string] const char *secret_file, [out, size=len] uint8_t* buf, size_t len);
        void elide_server_request([in, string] const char *secret_request, [out, size=len] uint8_t* buf, size_t len);
        void elide_disable_writable( uintptr_t address, size_t len );
    };

};
